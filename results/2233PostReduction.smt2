
(set-logic ALL) 

(declare-sort MyList 0) 

(declare-fun Nil () MyList) 

(declare-fun Cons (Real MyList) MyList) 

(declare-fun Head (MyList) Real) 

(declare-fun Tail (MyList) MyList) 

(declare-fun is-Nil (MyList) Bool) 

(declare-fun is-Cons (MyList) Bool) 
(declare-fun l0 () MyList) 
(declare-fun l1 () MyList) 
(declare-fun l2 () MyList) 
(declare-fun l3 () MyList) 
(declare-fun i0 () Real) 
(declare-fun i1 () Real) 
(declare-fun cv0 () Real) 
(declare-fun cv1 () MyList) 
(declare-fun cv2 () Real) 
(declare-fun cv3 () MyList) 
(declare-fun cv4 () Real) 
(declare-fun cv5 () MyList) 
(declare-fun cv6 () Real) 
(declare-fun cv7 () MyList) 
(declare-fun cv8 () Real) 
(declare-fun cv9 () MyList) 
(declare-fun cv10 () Real) 
(declare-fun cv11 () MyList) 
(declare-fun cv12 () Real) 
(declare-fun cv13 () MyList) 
(declare-fun cv14 () Real) 
(declare-fun cv15 () MyList) 
(declare-fun cv16 () Real) 
(declare-fun cv17 () MyList) 
(declare-fun cv18 () MyList) 
(declare-fun cv19 () MyList) 
(declare-fun cv20 () MyList) 
(declare-fun cv21 () MyList) 
(declare-fun cv22 () MyList) 
(declare-fun cv23 () MyList) 
(declare-fun cv24 () MyList) 
(declare-fun cv25 () MyList) 
(declare-fun cv26 () MyList) 
(declare-fun cv27 () MyList) 
(declare-fun cv28 () MyList) 
(declare-fun cv29 () MyList) 
(declare-fun cv30 () MyList) 
(declare-fun cv31 () MyList) 
(declare-fun cv32 () MyList) 
(declare-fun cv33 () MyList) 
(declare-fun cv34 () MyList) 
(declare-fun cv35 () MyList) 
(declare-fun cv36 () MyList) 
(declare-fun cv37 () MyList) 
(declare-fun cv38 () MyList) 
(declare-fun cv39 () MyList) 
(declare-fun cv40 () MyList) 
(declare-fun cv41 () MyList) 
(assert (and (and (and (is-Cons Nil) (= Nil (Cons cv0 cv1)) (= cv0 (Head Nil)) (= cv1 (Tail Nil))) (and (is-Nil Nil) (= Nil Nil)) (and (= l3 l0)))) )
(assert (and (and (and (= l2 Nil) (is-Nil l2)) (and (= l2 l0)) (and (= l1 Nil) (is-Nil l1)) (and (is-Cons Nil) (= Nil (Cons cv2 cv3)) (= cv2 (Head Nil)) (= cv3 (Tail Nil))))) )
(assert (and (is-Cons l2) (= l2 (Cons cv4 cv5)) (= cv4 (Head l2)) (= cv5 (Tail l2))) )
(assert (and (and (and (= l3 Nil) (is-Nil l3)) (and (= l3 Nil) (is-Nil l3)) (and (= l1 Nil) (is-Nil l1)) (and (is-Cons l3) (= l3 (Cons cv6 cv7)) (= cv6 (Head l3)) (= cv7 (Tail l3))))) )
(assert (and (and (and (is-Cons Nil) (= Nil (Cons cv8 cv9)) (= cv8 (Head Nil)) (= cv9 (Tail Nil))) (and (= l1 l1)) (and (is-Nil Nil) (= Nil Nil)) (and (= l2 l2)))) )
(assert (and (and (and (= l0 Nil) (is-Nil l0)) (and (= l2 l3)) (and (= l0 Nil) (is-Nil l0)) (and (is-Cons Nil) (= Nil (Cons cv10 cv11)) (= cv10 (Head Nil)) (= cv11 (Tail Nil))))) )
(assert (and (is-Nil l1) (= l1 Nil)) )
(assert (and (and (and (is-Cons Nil) (= Nil (Cons cv12 cv13)) (= cv12 (Head Nil)) (= cv13 (Tail Nil))) (and (is-Cons l2) (= l2 (Cons cv14 cv15)) (= cv14 (Head l2)) (= cv15 (Tail l2))) (and (is-Cons Nil) (= Nil (Cons cv16 cv17)) (= cv16 (Head Nil)) (= cv17 (Tail Nil))) (and (is-Nil Nil) (= Nil Nil)))) )
(assert (or (is-Cons l0) (is-Nil l0)) )
(assert (or (not (is-Cons l0)) (not (is-Nil l0))) )
(assert (or (not (is-Nil l0)) (= l0 Nil)) )
(assert (or (is-Cons l1) (is-Nil l1)) )
(assert (or (not (is-Cons l1)) (not (is-Nil l1))) )
(assert (or (not (is-Nil l1)) (= l1 Nil)) )
(assert (or (is-Cons l2) (is-Nil l2)) )
(assert (or (not (is-Cons l2)) (not (is-Nil l2))) )
(assert (or (not (is-Nil l2)) (= l2 Nil)) )
(assert (or (is-Cons l3) (is-Nil l3)) )
(assert (or (not (is-Cons l3)) (not (is-Nil l3))) )
(assert (or (not (is-Nil l3)) (= l3 Nil)) )
(assert (or (is-Cons Nil) (is-Nil Nil)) )
(assert (or (not (is-Cons Nil)) (not (is-Nil Nil))) )
(assert (or (not (is-Nil Nil)) (= Nil Nil)) )
(assert (and (= cv18 (Tail l0)) (not (= cv18 l0)) (= cv19 (Tail cv18)) (not (= cv19 l0)) (not (= cv19 l0)) (= cv20 (Tail cv19)) (not (= cv20 l0)) (not (= cv20 l0)) (not (= cv20 cv18)) (= cv21 (Tail cv20)) (not (= cv21 l0)) (not (= cv21 l0)) (not (= cv21 cv18)) (not (= cv21 cv19)) (= cv22 (Tail cv21)) (not (= cv22 l0)) (not (= cv22 l0)) (not (= cv22 cv18)) (not (= cv22 cv19)) (not (= cv22 cv20)) (= cv23 (Tail cv22)) (not (= cv23 l0)) (not (= cv23 l0)) (not (= cv23 cv18)) (not (= cv23 cv19)) (not (= cv23 cv20)) (not (= cv23 cv21))) )
(assert (and (= cv24 (Tail l1)) (not (= cv24 l1)) (= cv25 (Tail cv24)) (not (= cv25 l1)) (not (= cv25 l1)) (= cv26 (Tail cv25)) (not (= cv26 l1)) (not (= cv26 l1)) (not (= cv26 cv24)) (= cv27 (Tail cv26)) (not (= cv27 l1)) (not (= cv27 l1)) (not (= cv27 cv24)) (not (= cv27 cv25)) (= cv28 (Tail cv27)) (not (= cv28 l1)) (not (= cv28 l1)) (not (= cv28 cv24)) (not (= cv28 cv25)) (not (= cv28 cv26)) (= cv29 (Tail cv28)) (not (= cv29 l1)) (not (= cv29 l1)) (not (= cv29 cv24)) (not (= cv29 cv25)) (not (= cv29 cv26)) (not (= cv29 cv27))) )
(assert (and (= cv30 (Tail l2)) (not (= cv30 l2)) (= cv31 (Tail cv30)) (not (= cv31 l2)) (not (= cv31 l2)) (= cv32 (Tail cv31)) (not (= cv32 l2)) (not (= cv32 l2)) (not (= cv32 cv30)) (= cv33 (Tail cv32)) (not (= cv33 l2)) (not (= cv33 l2)) (not (= cv33 cv30)) (not (= cv33 cv31)) (= cv34 (Tail cv33)) (not (= cv34 l2)) (not (= cv34 l2)) (not (= cv34 cv30)) (not (= cv34 cv31)) (not (= cv34 cv32)) (= cv35 (Tail cv34)) (not (= cv35 l2)) (not (= cv35 l2)) (not (= cv35 cv30)) (not (= cv35 cv31)) (not (= cv35 cv32)) (not (= cv35 cv33))) )
(assert (and (= cv36 (Tail l3)) (not (= cv36 l3)) (= cv37 (Tail cv36)) (not (= cv37 l3)) (not (= cv37 l3)) (= cv38 (Tail cv37)) (not (= cv38 l3)) (not (= cv38 l3)) (not (= cv38 cv36)) (= cv39 (Tail cv38)) (not (= cv39 l3)) (not (= cv39 l3)) (not (= cv39 cv36)) (not (= cv39 cv37)) (= cv40 (Tail cv39)) (not (= cv40 l3)) (not (= cv40 l3)) (not (= cv40 cv36)) (not (= cv40 cv37)) (not (= cv40 cv38)) (= cv41 (Tail cv40)) (not (= cv41 l3)) (not (= cv41 l3)) (not (= cv41 cv36)) (not (= cv41 cv37)) (not (= cv41 cv38)) (not (= cv41 cv39))) )
(assert (not (is-Cons Nil)) )
(assert (is-Nil Nil) )
(check-sat)
